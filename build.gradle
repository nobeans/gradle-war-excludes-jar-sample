apply plugin: 'war'

repositories {
    mavenCentral()
    maven {
        url "http://repository.codehaus.org"
        url "http://snapshots.repository.codehaus.org"
    }
}

configurations {
    // 一括で除外できるが、runtimeに依存するtestRuntimeからも除外される。
    //runtime.exclude module: 'spock-core'
}

dependencies {
    runtime (project(':subproject-a')) {
        //exclude group: 'commons-cli', module: 'commons-cli'
        //excludeJars(delegate)
    }
    runtime (project(':subproject-b')) {
        // 複数のサブプロジェクトで同じjarに依存している場合、それぞれに除外設定が必要になる。
        //exclude group: 'commons-cli', module: 'commons-cli'

        // spock-coreの依存先も除外される
        //exclude module: 'spock-core'

        // spock-coreは依存するけど、その先のjunit-depは要らない、という除外も可能
        //exclude module: 'junit-dep'
        //exclude module: 'hamcrest-core'
    }
    compile 'org.codehaus.groovy:groovy-all:2.1.6'

}

war {
    // 確認
    println "---Before"
    classpath.each { println it }
    println "---"

    // と設定してもなぜかwarから除外されない。
    // Ant式ワイルドカードを書いてみても駄目。
    //excludes = ["**/*groovy*"]

    // 自前でフィルタリングすると一応除外できた。
    // この場合、推移的依存関係は使えないのですべての除外Jarを指定しなければならない。
    def myExcludes = ["groovy-all", "spock-core"]
    classpath = classpath.collect { file ->
        // 除外リスト内のパタンと部分一致に入っているものはnullにしておいて後でfindAllで除外する。
        myExcludes.any { file =~ it } ? null : file
    }.findAll { it } // null除外

    // 確認
    println "---After"
    classpath.each { println it }
    println "---"
}
